test:2.3:
  image: ruby:2.3
  before_script:
    - ruby -v
    - which ruby
    - gem install bundler --no-document
    - bundle install --jobs=$(nproc) --path=deps "${FLAGS[@]}"
    - bundle clean
  script: bundle exec rake test
  except:
    - tags
  cache:
    key: ruby:2.3
    paths:
      - deps

test:2.4:
  image: ruby:2.4
  before_script:
    - ruby -v
    - which ruby
    - gem install bundler --no-document
    - bundle install --jobs=$(nproc) --path=deps "${FLAGS[@]}"
    - bundle clean
  script: bundle exec rake test
  except:
    - tags
  cache:
    key: ruby:2.4
    paths:
      - deps

test:2.5:
  image: ruby:2.5
  before_script:
    - ruby -v
    - which ruby
    - gem install bundler --no-document
    - bundle install --jobs=$(nproc) --path=deps "${FLAGS[@]}"
    - bundle clean
  script: bundle exec rake test
  except:
    - tags
  artifacts:
    paths:
      - coverage
  cache:
    key: ruby:2.5
    paths:
      - deps

test:2.6:
  image: ruby:2.6-rc
  before_script:
    - ruby -v
    - which ruby
    - gem install bundler --no-document
    - bundle install --jobs=$(nproc) --path=deps "${FLAGS[@]}"
    - bundle clean
  script: bundle exec rake test
  except:
    - tags
  cache:
    key: ruby:2.6
    paths:
      - deps

pages:
  stage: deploy
  dependencies:
    - test:2.5
  before_script:
    - ruby -v
    - which ruby
    - gem install bundler --no-document
    - bundle install --jobs=$(nproc) --path=deps "${FLAGS[@]}"
    - bundle clean
  script:
    - rake doc:yard
    - mv doc public
    - mv coverage public/
  artifacts:
    paths:
      - public
  only:
    - master
  cache:
    key: ruby:2.5
    paths:
      - deps

dependency_scanning:
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    paths: [gl-dependency-scanning-report.json]
